import { AgeRange, CategoryDataGroupType, CategoryName, Gender } from '~/types/category';
import { eventDetails } from './event_detail';

export const categories: CategoryDataGroupType[] = [
  {
    age: '12_14',
    gender: '女性',
    categories: ['学業・受験・進学', '友人関係', '家族との関係', '日々の生活', '趣味'],
  },
  {
    age: '12_14',
    gender: '男性',
    categories: ['学業・受験・進学', '友人関係', '家族との関係', '日々の生活', '趣味'],
  },
  {
    age: '12_14',
    gender: '性別不明',
    categories: ['学業・受験・進学', '友人関係', '家族との関係', '日々の生活', '趣味'],
  },
  {
    age: '15_19',
    gender: '女性',
    categories: ['学業・受験・進学', '友人関係', '日々の生活', '家族との関係', '趣味'],
  },
  {
    age: '15_19',
    gender: '男性',
    categories: ['学業・受験・進学', '友人関係', '家族との関係', '仕事のこと', '趣味'],
  },
  {
    age: '15_19',
    gender: '性別不明',
    categories: ['学業・受験・進学', '友人関係', '家族との関係', '日々の生活', '趣味'],
  },
  {
    age: '20_24',
    gender: '女性',
    categories: ['仕事のこと', '友人関係', '学業・受験・進学', 'お金のこと', '趣味'],
  },
  {
    age: '20_24',
    gender: '男性',
    categories: ['仕事のこと', '学業・受験・進学', 'お金のこと', '友人関係', '趣味'],
  },
  {
    age: '20_24',
    gender: '性別不明',
    categories: ['仕事のこと', '学業・受験・進学', 'お金のこと', '友人関係', '趣味'],
  },
  {
    age: '25_29',
    gender: '女性',
    categories: ['仕事のこと', 'お金のこと', '友人関係', '家族との関係', '育児'],
  },
  {
    age: '25_29',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '友人関係', '趣味', '日々の生活'],
  },
  {
    age: '25_29',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '友人関係', '趣味', '家族との関係'],
  },
  {
    age: '30_34',
    gender: '女性',
    categories: ['仕事のこと', 'お金のこと', '育児', '家事', '友人関係'],
  },
  {
    age: '30_34',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '友人関係', '日々の生活', '趣味'],
  },
  {
    age: '30_34',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '育児', '友人関係', '日々の生活'],
  },
  {
    age: '35_39',
    gender: '女性',
    categories: ['仕事のこと', 'お金のこと', '育児', '子どもの教育', '家事'],
  },
  {
    age: '35_39',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '友人関係', '日々の生活', '家族との関係'],
  },
  {
    age: '35_39',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '育児', '子どもの教育', '友人関係'],
  },
  {
    age: '40_44',
    gender: '女性',
    categories: ['仕事のこと', 'お金のこと', '子どもの教育', '育児', '家族との関係'],
  },
  {
    age: '40_44',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '友人関係', '子どもの教育', '日々の生活'],
  },
  {
    age: '40_44',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '子どもの教育', '友人関係', '家族との関係'],
  },
  {
    age: '45_49',
    gender: '女性',
    categories: ['仕事のこと', 'お金のこと', '子どもの教育', '家族との関係', '友人関係'],
  },
  {
    age: '45_49',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '友人関係', '子どもの教育', '自分の健康'],
  },
  {
    age: '45_49',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '子どもの教育', '友人関係', '家族との関係'],
  },
  {
    age: '50_54',
    gender: '女性',
    categories: ['仕事のこと', 'お金のこと', '家族の健康', '家族との関係', '自分の健康'],
  },
  {
    age: '50_54',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '家族の健康', '友人関係', '自分の健康'],
  },
  {
    age: '50_54',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '家族の健康', '友人関係', '家族との関係'],
  },
  {
    age: '55_59',
    gender: '女性',
    categories: ['仕事のこと', '家族の健康', 'お金のこと', '自分の健康', '家族との関係'],
  },
  {
    age: '55_59',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '家族の健康', '自分の健康', '友人関係'],
  },
  {
    age: '55_59',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '家族の健康', '自分の健康', '家族との関係'],
  },
  {
    age: '60_64',
    gender: '女性',
    categories: ['家族の健康', 'お金のこと', '仕事のこと', '自分の健康', '家族との関係'],
  },
  {
    age: '60_64',
    gender: '男性',
    categories: ['仕事のこと', 'お金のこと', '自分の健康', '家族の健康', '友人関係'],
  },
  {
    age: '60_64',
    gender: '性別不明',
    categories: ['仕事のこと', 'お金のこと', '家族の健康', '自分の健康', '家族との関係'],
  },
  {
    age: '65_69',
    gender: '女性',
    categories: ['自分の健康', '家族の健康', 'お金のこと', '家族との関係', '仕事のこと'],
  },
  {
    age: '65_69',
    gender: '男性',
    categories: ['自分の健康', 'お金のこと', '仕事のこと', '家族の健康', '趣味'],
  },
  {
    age: '65_69',
    gender: '性別不明',
    categories: ['自分の健康', 'お金のこと', '家族の健康', '仕事のこと', '家族との関係'],
  },
  {
    age: '70_74',
    gender: '女性',
    categories: ['自分の健康', '家族の健康', 'お金のこと', '家族との関係', '趣味'],
  },
  {
    age: '70_74',
    gender: '男性',
    categories: ['自分の健康', 'お金のこと', '家族の健康', '仕事のこと', '家族との関係'],
  },
  {
    age: '70_74',
    gender: '性別不明',
    categories: ['自分の健康', 'お金のこと', '家族の健康', '家族との関係', '趣味'],
  },
  {
    age: '75_79',
    gender: '女性',
    categories: ['自分の健康', '家族の健康', '家族との関係', 'お金のこと', '趣味'],
  },
  {
    age: '75_79',
    gender: '男性',
    categories: ['自分の健康', 'お金のこと', '家族の健康', '家族との関係', '趣味'],
  },
  {
    age: '75_79',
    gender: '性別不明',
    categories: ['自分の健康', '家族の健康', 'お金のこと', '家族との関係', '趣味'],
  },
  {
    age: '80_84',
    gender: '女性',
    categories: ['自分の健康', '家族の健康', '家族との関係', 'お金のこと', '趣味'],
  },
  {
    age: '80_84',
    gender: '男性',
    categories: ['自分の健康', '家族の健康', 'お金のこと', '家族との関係', '趣味'],
  },
  {
    age: '80_84',
    gender: '性別不明',
    categories: ['自分の健康', '家族の健康', '家族との関係', 'お金のこと', '趣味'],
  },
  {
    age: '85_',
    gender: '女性',
    categories: ['自分の健康', '家族との関係', '家族の健康', '趣味', '家事'],
  },
  {
    age: '85_',
    gender: '男性',
    categories: ['自分の健康', '家族の健康', '趣味', '家族との関係', 'お金のこと'],
  },
  {
    age: '85_',
    gender: '性別不明',
    categories: ['自分の健康', '家族の健康', '家族との関係', '趣味', 'お金のこと'],
  },
];

export function getOptionEvents(ageRange: AgeRange, gender: Gender, category: CategoryName): string[] {
  const matchedEvents = eventDetails.find(
    (item) => item.age === ageRange && item.gender === gender && item.category === category,
  )?.events;

  if (!matchedEvents)
    return [
      '朝、優雅に紅茶を入れてスコーンを食べた。',
      '公園で子どもたちが遊んでいて微笑ましかった。',
      '消費期限が一ヶ月前の梅干しを食べてしまった。',
    ];

  return matchedEvents;
}

export function getAgeGroup(age: number): string {
  if (age >= 85) {
    return '85_';
  }

  const ageGroups = [
    [12, 14], // 12歳から14歳まで
    [15, 19], // 15歳から19歳まで
    [20, 24], // 20歳から24歳まで
    [25, 29], // 25歳から29歳まで
    [30, 34], // 30歳から34歳まで
    [35, 39], // 35歳から39歳まで
    [40, 44], // 40歳から44歳まで
    [45, 49], // 45歳から49歳まで
    [50, 54], // 50歳から54歳まで
    [55, 59], // 55歳から59歳まで
    [60, 64], // 60歳から64歳まで
    [65, 69], // 65歳から69歳まで
    [70, 74], // 70歳から74歳まで
    [75, 79], // 75歳から79歳まで
    [80, 84], // 80歳から84歳まで
  ];

  for (const [start, end] of ageGroups) {
    if (age >= start && age <= end) {
      return `${start}_${end}`;
    }
  }

  // この時点で age < 12 や age > 84 はない前提なので fallback は必要ないはず
  throw new Error(`Unexpected age: ${age}`);
}
